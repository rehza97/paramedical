"""Add multi-year promotion support with PromotionYear model

Revision ID: 9bd470368e34
Revises: b58b9ddbb314
Create Date: 2025-07-01 13:05:09.263013

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9bd470368e34'
down_revision = 'b58b9ddbb314'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create promotion_years table
    op.create_table('promotion_years',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('promotion_id', sa.String(
                        length=36), nullable=False),
                    sa.Column('annee_niveau', sa.Integer(), nullable=False),
                    sa.Column('annee_calendaire',
                              sa.Integer(), nullable=False),
                    sa.Column('nom', sa.String(length=200), nullable=True),
                    sa.Column('date_debut', sa.String(
                        length=10), nullable=True),
                    sa.Column('date_fin', sa.String(length=10), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('date_creation', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['promotion_id'], ['promotions.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Create promotion_year_services association table
    op.create_table('promotion_year_services',
                    sa.Column('promotion_year_id', sa.String(
                        length=36), nullable=False),
                    sa.Column('service_id', sa.String(
                        length=36), nullable=False),
                    sa.ForeignKeyConstraint(['promotion_year_id'], [
                        'promotion_years.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['service_id'], ['services.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('promotion_year_id', 'service_id')
                    )

    # Add new columns to existing tables
    op.add_column('etudiants', sa.Column('annee_courante',
                  sa.Integer(), nullable=False, server_default='1'))
    op.add_column('plannings', sa.Column(
        'promotion_year_id', sa.String(length=36), nullable=True))
    op.add_column('plannings', sa.Column(
        'annee_niveau', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'plannings', 'promotion_years', [
                          'promotion_year_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'plannings', type_='foreignkey')
    op.drop_column('plannings', 'annee_niveau')
    op.drop_column('plannings', 'promotion_year_id')
    op.drop_column('etudiants', 'annee_courante')
    op.drop_table('promotion_year_services')
    op.drop_table('promotion_years')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'plannings', type_='foreignkey')
    op.drop_column('plannings', 'annee_niveau')
    op.drop_column('plannings', 'promotion_year_id')
    op.drop_column('etudiants', 'annee_courante')
